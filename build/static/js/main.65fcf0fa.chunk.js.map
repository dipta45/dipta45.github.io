{"version":3,"sources":["component/Tes/Tes.jsx","container/App.jsx","index.js"],"names":["Tes","props","className","jumlah","name","href","target","Timer","increase","setState","state","timer","parseInt","decrease","start","this","addInterval","setInterval","clearInterval","Component","App","toggle","isOpen","handleCount","event","isRubah","cek","handleReset","bind","Rubah","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Jumbotron","Container","Row","Col","Alert","Button","tag","size","Spinner","type","Clock","date","toLocaleTimeString","ReactDOM","render","Date","document","getElementById"],"mappings":"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","file":"static/js/main.65fcf0fa.chunk.js","sourcesContent":["import React from 'react';\nimport './Tes.css';\n\n\n\nconst Tes = (props) => {\n\n  \n    return (\n        <div>\n            <center><p className=\"tes\">aku di sini ngape lo<span >{props.jumlah}</span> <h2 className=\"nama\">{props.name}</h2></p>\n            <a className=\"coba\" href=\"files.smkn7jember.org\" target=\"_blank\">Sini lu</a></center>\n        \n        </div>\n            \n            \n\n\n    );\n}\n\nexport default Tes;\n","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n    Button,\n    Alert,\n    Spinner\n    \n} from 'reactstrap';\nimport Tes from '../component/Tes/Tes';\n\nclass Timer extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            timer : props.start\n        }\n    }\n\n   \n    componentDidMount(){\n\n        this.addInterval = setInterval(()=>this.increase(),1000)\n        \n    }\n\n    componentWillUnmount(){\n\n        clearInterval(this.addInterval)\n        setInterval(()=>this.increase(),1000)\n\n    }\n \n    increase = () =>{\n\n        this.setState((state,props)=>({\n            timer:parseInt(state.timer)+1\n            \n\n        }))\n    }\n    decrease = () =>{\n        this.setState((state,props)=>({\n\n            timer:parseInt(state.timer)+1000\n            \n        }))\n    }\n\n    render(){\n\n        return(\n\n            <div>\n                 \n                {this.state.timer}\n                \n            </div>\n        );\n    }\n\n\n}\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n            name:'dipta',\n            isRubah:false,\n            Rubah:'',\n            cek : props.start\n        };\n    }\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    \n    handleCount= (event) =>{\n        this.setState({\n            isRubah: !this.state.isRubah,\n            cek:this.state.cek=0\n        });\n    \n       \n    }\n    handleReset=()=>{\n\n\n    }\n    componentDidMount(state){\n\n        this.cek = this.state.isRubah\n\n        if(this.cek){\n            this.setState({\n                Rubah: 'panas'\n            });\n        }else{\n            this.setState({\n                Rubah: 'dingin'\n            });\n        }\n        \n    }  \n\n\n   \n        \n        \n    \n    render() {\n        return (\n            <div>\n               \n                <Navbar color=\"dark\" light expand=\"md\">\n                    <NavbarBrand className=\"text-white\" href=\"/\">{this.state.Rubah}</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink className=\"text-white\" href=\"/components/\">Components</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"text-white\" href=\"https://github.com/reactstrap/reactstrap\">Github</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n                <Jumbotron>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Alert color=\"success\">Welcome {this.state.isRubah ? 'ON':'OFF'}</Alert>\n                                <button className=\"btn btn-md btn-success\" onClick={this.handleCount}>click</button>\n                                    <Button\n                                        tag=\"a\"\n                                        color=\"white\"\n                                        size=\"md\"\n                                        href=\"http://reactstrap.github.io\"\n                                        target=\"_blank\"\n                                    >\n                                        <Spinner type={this.state.isRubah? 'grow':''} color={this.state.isRubah? 'success':''}></Spinner>\n                                    </Button>\n                                    <Timer start=\"0\"/>\n                                \n                            </Col>\n                        </Row>\n                        <Row>\n\n                        <Col className=\"col-md-3\" ><Tes  className=\"\" name={this.state.name}/></Col>\n                        <Col className=\"col-md-3\" ><Tes className=\"\" name=\"Ikromi\"/></Col>\n                        <Col className=\"col-md-3\" ><Tes className=\"\" name=\"Muslim\"/></Col>\n\n                        </Row>\n                        \n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n//import Home from './container/Home/Home';\nimport App from './container/App.jsx';\n\n\n\nfunction Clock(props) {\n  return (\n    <div>\n      <h1>Halo, dunia!</h1>\n      <h2>Ini {props.date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById('rootcek')\n  );\n}\n\nsetInterval(tick, 1000);\nReactDOM.render(\n  \n    \n    <App/>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}